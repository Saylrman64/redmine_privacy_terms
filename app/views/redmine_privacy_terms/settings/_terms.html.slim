p
  = additionals_settings_checkbox :enable_terms

fieldset.privacy-terms
  legend = l :label_terms_url

  p
    = label_tag 'settings[terms_project_id]', l(:label_project)
    - if AdditionalsPlugin.active_reporting?
      = autocomplete_select_entries('settings[terms_project_id]',
                                    'projects_auto_completes',
                                    (@settings[:terms_project_id].present? ? Project.find_by(id: @settings[:terms_project_id]) : nil))
    - else
      = select_tag('settings[terms_project_id]',
                   project_tree_options_for_select(Project.active,
                                                   selected: @settings[:terms_project_id].present? ? Project.find_by(id: @settings[:terms_project_id]) : nil),
                   required: true)
  p
    = additionals_settings_textfield :terms_page, label: l(:label_wiki_page), size: 50
    - if RedminePrivacyTerms.valid_terms_url?
      '
      = link_to(l(:button_show), RedminePrivacyTerms.terms_url)
    em.info = l :terms_url_info

fieldset.privacy-terms
  legend = l :label_terms_reject_url

  p
    = label_tag 'settings[terms_reject_project_id]', l(:label_project)
    - if AdditionalsPlugin.active_reporting?
      = autocomplete_select_entries('settings[terms_reject_project_id]',
                                    'projects_auto_completes',
                                    (@settings[:terms_reject_project_id].present? ? Project.find_by(id: @settings[:terms_reject_project_id]) : nil),
                                    include_blank: true, allow_clear: true)
    - else
      = select_tag('settings[terms_reject_project_id]',
                   project_tree_options_for_select(Project.active,
                                                   selected: @settings[:terms_reject_project_id].present? ? Project.find_by(id: @settings[:terms_reject_project_id]) : nil),
                                                   include_blank: true)

  p
    = additionals_settings_textfield :terms_reject_page, size: 50
    - if RedminePrivacyTerms.valid_terms_reject_url?
      '
      = link_to(l(:button_show), RedminePrivacyTerms.terms_reject_url)
    em.info = l :terms_reject_url_info
